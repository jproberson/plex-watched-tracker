<%- include('partials/head', { title: "Tier list", ADMIN_TOKEN: ADMIN_TOKEN }) %>

<body>
<header>
    <div class="header-container">
        <h1>Watched TV Shows</h1>
        <% if (ADMIN_TOKEN) { %>
            <button id="toggle-drag">Edit List</button>
        <% } %>
    </div>
</header>
<div class="tier-list-container">
    <div class="tier-list">
        <% const tiers = ['S', 'A', 'B', 'C', 'D', 'F']; %>
        <% tiers.forEach(tier => { %>
            <div class="tier">
                <div class="tier-label">
                    <%= tier; %>
                </div>
                <div class="tier-items" id="tier-<%= tier; %>">
                    <% watchedShows.filter(show => show.letterOrder === tier).forEach(show => { %>
                        <div class="item" data-id="<%= show.key; %>" data-title="<%= show.title; %>">
                            <img src="/thumbnails/<%= show.thumb; %>" alt="<%= show.title; %>">
                            <div class="item-title">
                                <%= show.title; %>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        <% }); %>
    </div>
    <div class="item-pool">
        <% watchedShows.filter(show => !show.letterOrder).forEach(show => { %>
            <div class="item" data-id="<%= show.key; %>" data-title="<%= show.title; %>">
                <img src="/thumbnails/<%= show.thumb; %>" alt="<%= show.title; %>">
                <div class="item-title">
                    <%= show.title; %>
                </div>
            </div>
        <% }); %>
    </div>
</div>
<div id="passwordModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Enter admin token:</h2>
        <input type="password" id="adminPassword" placeholder="Enter password">
        <button id="submitPassword">Submit</button>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/dragula/3.7.3/dragula.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dragula/3.7.3/dragula.min.css" />

<script>
  const watchedShows = <%- JSON.stringify(watchedShows).replace(/</g, '\\u003c'); %>;

  let adminToken = null;
  const toggleDragButton = document.getElementById('toggle-drag');
  let drake = null;

  const modal = document.getElementById("passwordModal");
  const closeModal = document.querySelector(".close");
  const submitPassword = document.getElementById("submitPassword");
  const adminPassword = document.getElementById("adminPassword");

  toggleDragButton.addEventListener('click', () => {
    if (!adminToken) {
      modal.style.display = "block";
    } else {
      toggleDragMode();
    }
  });

  closeModal.addEventListener('click', () => {
    modal.style.display = "none";
  });

  submitPassword.addEventListener('click', () => {
    validateAdminToken();
  });

  adminPassword.addEventListener('keydown', (event) => {
    if (event.key === 'Enter') {
      validateAdminToken();
    }
  });

  function validateAdminToken() {
    const inputToken = adminPassword.value;
    if (inputToken) {
      adminToken = inputToken;
      modal.style.display = "none";
      toggleDragMode();
    } else {
      alert("Please enter a valid admin token.");
    }
  }

  function toggleDragMode() {
    if (!drake) {
      drake = dragula([...document.querySelectorAll('.tier-items'), document.querySelector('.item-pool')]);

      drake.on('drop', (el, target, source, sibling) => {
        updateOrder();
      });

      document.querySelectorAll('.item').forEach(item => {
        item.setAttribute('draggable', true);
      });

      toggleDragButton.innerText = 'Disable Edit Mode';
      toggleDragButton.style.backgroundColor = '#f44336';
    } else {
      drake.destroy();
      drake = null;
      document.querySelectorAll('.item').forEach(item => {
        item.removeAttribute('draggable');
      });

      toggleDragButton.innerText = 'Enable Edit Mode';
      toggleDragButton.style.backgroundColor = '#4caf50';
    }
  }

  function updateOrder() {
    const updatedShows = [];

    document.querySelectorAll('.tier-items').forEach(tierItems => {
      const tierId = tierItems.id.replace('tier-', '');
      tierItems.querySelectorAll('.item').forEach((item, index) => {
        const itemTitle = item.getAttribute('data-title');
        const show = watchedShows.find(s => s.title === itemTitle);
        if (show) {
          updatedShows.push({ ...show, letterOrder: tierId, numberOrder: index + 1 });
        }
      });
    });

    document.querySelector('.item-pool').querySelectorAll('.item').forEach(item => {
      const itemTitle = item.getAttribute('data-title');
      const show = watchedShows.find(s => s.title === itemTitle);
      if (show) {
        updatedShows.push({ ...show, letterOrder: '', numberOrder: null });
      }
    });

    saveOrder(updatedShows);
  }

  async function saveOrder(updatedShows) {
    try {
      const response = await fetch('/save-order', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ updatedShows, token: adminToken }),
      });

      if (!response.ok) {
        throw new Error('Failed to save order');
      }

    } catch (error) {
      console.error('Error saving order:', error.message);
    }
  }

  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  }
</script>
</body>

</html>
